plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
}

group = 'com.jlbabilino'
version = '0.1.1'

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'json'
            groupId = group
            version = version
            from components.java
            pom {
                name = 'json'
                description = 'A simple Java library for JSON serialization, parsing, deserialization, and exporting'
                url = 'https://github.com/jlbabilino/json'
                licenses {
                    license {
                        name = 'GNU General Public License (GPL)'
                        url = 'http://www.gnu.org/licenses/gpl.txt'
                    }
                }
                developers {
                    developer {
                        id = 'jlbabilino'
                        name = 'Justin Babilino'
                        email = 'jlbabilino@gmail.com'
                    }
                }
            }
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}